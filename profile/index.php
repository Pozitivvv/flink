<?php
/**
 * profile.php ‚Äî —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—Ä–æ—Ñ—ñ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
session_start();
require_once '../config.php';

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
if (!isset($_SESSION['user_id'])) {
    header('Location: login.php');
    exit;
}

$user_id = $_SESSION['user_id'];
$error_message = '';
$success_message = '';

try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    $stmt = $pdo->prepare("
        SELECT id, name, login, email, created_at 
        FROM users 
        WHERE id = ?
    ");
    $stmt->execute([$user_id]);
    $user = $stmt->fetch(PDO::FETCH_ASSOC);

    if (!$user) {
        header('Location: login.php');
        exit;
    }

    // –û–±—Ä–æ–±–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—è
    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])) {
        if ($_POST['action'] === 'edit_profile') {
            $new_name = trim($_POST['name'] ?? '');
            $new_email = trim($_POST['email'] ?? '');

            if (empty($new_name) || empty($new_email)) {
                $error_message = '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!';
            } else {
                $stmt = $pdo->prepare("
                    UPDATE users 
                    SET name = ?, email = ? 
                    WHERE id = ?
                ");
                if ($stmt->execute([$new_name, $new_email, $user_id])) {
                    $success_message = '–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!';
                    $user['name'] = $new_name;
                    $user['email'] = $new_email;
                } else {
                    $error_message = '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—è';
                }
            }
        }

        // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è
        if ($_POST['action'] === 'change_password') {
            $old_password = $_POST['old_password'] ?? '';
            $new_password = $_POST['new_password'] ?? '';
            $confirm_password = $_POST['confirm_password'] ?? '';

            if (empty($old_password) || empty($new_password) || empty($confirm_password)) {
                $error_message = '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!';
            } elseif ($new_password !== $confirm_password) {
                $error_message = '–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º!';
            } elseif (strlen($new_password) < 6) {
                $error_message = '–ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤!';
            } else {
                // –ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ —Å—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å
                $stmt = $pdo->prepare("SELECT password FROM users WHERE id = ?");
                $stmt->execute([$user_id]);
                $stored_password = $stmt->fetchColumn();

                if (!password_verify($old_password, $stored_password)) {
                    $error_message = '–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π!';
                } else {
                    $hashed_password = password_hash($new_password, PASSWORD_DEFAULT);
                    $stmt = $pdo->prepare("UPDATE users SET password = ? WHERE id = ?");
                    if ($stmt->execute([$hashed_password, $user_id])) {
                        $success_message = '–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ!';
                    } else {
                        $error_message = '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–∞—Ä–æ–ª—è';
                    }
                }
            }
        }
    }

    // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –≤—Å—ñ—Ö —Å–ª—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    $stmt = $pdo->prepare("
        SELECT COUNT(*) as total_words 
        FROM words 
        WHERE user_id = ?
    ");
    $stmt->execute([$user_id]);
    $words_count = $stmt->fetch(PDO::FETCH_ASSOC)['total_words'];

    // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –¥–Ω—ñ–≤/—É—Ä–æ–∫—ñ–≤
    $stmt = $pdo->prepare("
        SELECT COUNT(*) as total_days 
        FROM days 
        WHERE user_id = ?
    ");
    $stmt->execute([$user_id]);
    $days_count = $stmt->fetch(PDO::FETCH_ASSOC)['total_days'];

    // –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –ø–æ–º–∏–ª–æ–∫
    $stmt = $pdo->prepare("
        SELECT COUNT(*) as total_errors 
        FROM user_errors 
        WHERE user_id = ?
    ");
    $stmt->execute([$user_id]);
    $errors_count = $stmt->fetch(PDO::FETCH_ASSOC)['total_errors'];

    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤—ñ–¥—Å–æ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    $correct_words = $words_count - $errors_count;
    $progress = $words_count > 0 ? round(($correct_words / $words_count) * 100) : 0;

    // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó (–Ω–∞ –Ω—ñ–º–µ—Ü—å–∫—ñ–π)
    $created_date = new DateTime($user['created_at']);
    $fmt = new IntlDateFormatter(
        'de_DE',
        IntlDateFormatter::LONG,
        IntlDateFormatter::NONE
    );
    $formatted_date = $fmt->format($created_date);

} catch (PDOException $e) {
    die("‚ùå –ü–æ–º–∏–ª–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: " . $e->getMessage());
}
?>
<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü—Ä–æ—Ñ—ñ–ª—å</title>
    <link rel="stylesheet" href="style/profile.css">
    <link rel="stylesheet" href="../../assets/main-style.css">
    <style>
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            z-index: 2000;
            align-items: center;
            justify-content: center;
            padding: 20px;
            animation: fadeIn 0.2s ease;
        }

        .modal-overlay.active {
            display: flex;
        }

        .modal {
            background: #1a1a1a;
            border: 1px solid #2a2a2a;
            border-radius: 20px;
            padding: 24px;
            max-width: 400px;
            width: 100%;
            animation: slideUp 0.3s ease;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            text-align: center;
            margin-bottom: 16px;
        }

        .modal-icon {
            font-size: 48px;
            margin-bottom: 12px;
        }

        .modal h2 {
            font-size: 20px;
            color: #fff;
            margin-bottom: 8px;
        }

        .modal p {
            color: #9ca3af;
            font-size: 14px;
            line-height: 1.5;
        }

        .modal-buttons {
            display: flex;
            gap: 12px;
            margin-top: 24px;
        }

        .modal-btn {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 12px;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .modal-btn-cancel {
            background: #2a2a2a;
            color: #e4e4e4;
        }

        .modal-btn-cancel:active {
            background: #333;
        }

        .modal-btn-delete {
            background: #ef4444;
            color: white;
        }

        .modal-btn-delete:active {
            background: #dc2626;
            transform: scale(0.98);
        }

        .modal-form {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .form-group label {
            font-size: 14px;
            font-weight: 600;
            color: #fff;
        }

        .form-group input {
            padding: 12px;
            background: #0f0f0f;
            border: 1px solid #2a2a2a;
            border-radius: 12px;
            color: #e4e4e4;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #3b82f6;
            background: #1a1a1a;
        }

        .alert-box {
            padding: 12px;
            border-radius: 12px;
            margin-bottom: 16px;
            font-size: 14px;
            display: none;
        }

        .alert-box.show {
            display: block;
        }

        .alert-success {
            background: rgba(16, 185, 129, 0.1);
            border: 1px solid rgba(16, 185, 129, 0.3);
            color: #10b981;
        }

        .alert-error {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.3);
            color: #ef4444;
        }

        .modal-btn-submit {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            color: #fff;
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .modal-btn-submit:active {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            transform: scale(0.98);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ -->
        <div class="greeting">
            <div class="greeting-icon">üë§</div>
            <div class="greeting-text">
                <h1>Hallo, <?php echo htmlspecialchars($user['name']); ?>!</h1>
                <p>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤–∞—à–∏–º –ø—Ä–æ—Ñ—ñ–ª–µ–º —ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ—é</p>
            </div>
        </div>

        <!-- –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–∏–π –≤–∏—Ö—ñ–¥ (—è–∫—â–æ —î) -->
        <?php if (isset($_GET['logout_success'])): ?>
            <div class="alert alert-success">
                ‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ –∞–∫–∞—É–Ω—Ç—É.
            </div>
        <?php endif; ?>

        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-value"><?php echo $words_count; ?></div>
                <div class="stat-label">–°–ª—ñ–≤ –¥–æ–¥–∞–Ω–æ</div>
            </div>
            <div class="stat-card">
                <div class="stat-value"><?php echo $days_count; ?></div>
                <div class="stat-label">–î–Ω—ñ–≤ –Ω–∞–≤—á–∞–Ω–Ω—è</div>
            </div>
            <div class="stat-card">
                <div class="stat-value"><?php echo $errors_count; ?></div>
                <div class="stat-label">–ü–æ–º–∏–ª–æ–∫</div>
            </div>
            <div class="stat-card">
                <div class="stat-value"><?php echo $progress; ?>%</div>
                <div class="stat-label">–ü—Ä–æ–≥—Ä–µ—Å</div>
            </div>
        </div>

        <!-- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ -->
        <div class="widget">
            <div class="widget-title">
                <span class="widget-icon">‚ÑπÔ∏è</span>
                –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            </div>
            <div class="profile-info">
                <div class="info-row">
                    <span class="info-label">Name:</span>
                    <span class="info-value"><?php echo htmlspecialchars($user['name']); ?></span>
                </div>
                <div class="info-row">
                    <span class="info-label">Email:</span>
                    <span class="info-value"><?php echo htmlspecialchars($user['email']); ?></span>
                </div>
                <div class="info-row">
                    <span class="info-label">Datum der Registrierung:</span>
                    <span class="info-value"><?php echo $formatted_date; ?></span>
                </div>
            </div>
        </div>

        <!-- –î—ñ—ó -->
        <div class="widget">
            <div class="widget-title">
                <span class="widget-icon">‚öôÔ∏è</span>
                –î—ñ—ó
            </div>
            <div class="button-group">
                <button onclick="openEditModal()" class="btn btn-secondary">‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</button>
                <button onclick="openPasswordModal()" class="btn btn-secondary">üîê –ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</button>
                <button onclick="openLogoutModal()" class="btn btn-danger" style="grid-column: 1 / -1;">Ausloggen</button>
            </div>
        </div>
    </div>

    <!-- –ü—Ä–∏—Ö–æ–≤–∞–Ω–∞ —Ñ–æ—Ä–º–∞ –¥–ª—è –≤–∏—Ö–æ–¥—É -->
    <form id="logoutForm" method="POST" action="logout.php" style="display: none;"></form>

    <nav class="bottom-nav">
        <a href="../dashboard.php" class="nav-item">
            <span>üè†</span>
            –ì–æ–ª–æ–≤–Ω–∞
        </a>
        <a href="../add_day.php" class="nav-item">
            <span>üìò</span>
            –¢–µ–º–∏
        </a>
        <a href="../dictionary.php" class="nav-item">
            <span>üìö</span>
            –°–ª–æ–≤–∞—Ä—å
        </a>
        <a href="../flashcard/practice.php" class="nav-item">
            <span>‚úèÔ∏è</span>
            –ü—Ä–∞–∫—Ç–∏–∫–∞
        </a>
        <a href="#" class="nav-item active">
            <span>üë§</span>
            –ü—Ä–æ—Ñ—ñ–ª—å
        </a>
    </nav>

    <!-- –ú–û–î–ê–õ–ö–ê –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø –ü–†–û–§–Ü–õ–Ø -->
    <div id="editModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-icon">‚úèÔ∏è</div>
                <h2>–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</h2>
            </div>
            <div id="editAlert" class="alert-box"></div>
            <form id="editForm" class="modal-form">
                <input type="hidden" name="action" value="edit_profile">
                <div class="form-group">
                    <label for="name">–Ü–º'—è:</label>
                    <input type="text" id="name" name="name" value="<?php echo htmlspecialchars($user['name']); ?>" required>
                </div>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" id="email" name="email" value="<?php echo htmlspecialchars($user['email']); ?>" required>
                </div>
                <div class="modal-buttons">
                    <button type="button" class="modal-btn modal-btn-cancel" onclick="closeEditModal()">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                    <button type="submit" class="modal-btn modal-btn-submit">–ó–±–µ—Ä–µ–≥—Ç–∏</button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ú–û–î–ê–õ–ö–ê –ó–ú–Ü–ù–ò –ü–ê–†–û–õ–Ø -->
    <div id="passwordModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-icon">üîê</div>
                <h2>–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</h2>
            </div>
            <div id="passwordAlert" class="alert-box"></div>
            <form id="passwordForm" class="modal-form">
                <input type="hidden" name="action" value="change_password">
                <div class="form-group">
                    <label for="old_password">–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å:</label>
                    <input type="password" id="old_password" name="old_password" required>
                </div>
                <div class="form-group">
                    <label for="new_password">–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:</label>
                    <input type="password" id="new_password" name="new_password" required>
                </div>
                <div class="form-group">
                    <label for="confirm_password">–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å:</label>
                    <input type="password" id="confirm_password" name="confirm_password" required>
                </div>
                <div class="modal-buttons">
                    <button type="button" class="modal-btn modal-btn-cancel" onclick="closePasswordModal()">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                    <button type="submit" class="modal-btn modal-btn-submit">–ó–º—ñ–Ω–∏—Ç–∏</button>
                </div>
            </form>
        </div>
    </div>

    <!-- –ú–û–î–ê–õ–ö–ê –í–ò–•–û–î–£ -->
    <div id="logoutModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-icon">üö™</div>
                <h2>–í–∏—Ö—ñ–¥ –∑ –∞–∫–∞—É–Ω—Ç—É</h2>
            </div>
            <p>–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏? –í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –∑–∞–Ω–æ–≤–æ —É–≤—ñ–π—Ç–∏ —É —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç.</p>
            <div class="modal-buttons">
                <button class="modal-btn modal-btn-cancel" onclick="closeLogoutModal()">–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
                <button class="modal-btn modal-btn-delete" onclick="confirmLogout()">–í–∏—Ö—ñ–¥</button>
            </div>
        </div>
    </div>

    <script>
        // –†–ï–î–ê–ì–£–í–ê–ù–ù–Ø –ü–†–û–§–Ü–õ–Ø
        function openEditModal() {
            document.getElementById('editModal').classList.add('active');
        }

        function closeEditModal() {
            document.getElementById('editModal').classList.remove('active');
            document.getElementById('editAlert').classList.remove('show');
        }

        document.getElementById('editForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(html => {
                const doc = new DOMParser().parseFromString(html, 'text/html');
                const successMsg = doc.body.textContent.includes('–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');
                const alertBox = document.getElementById('editAlert');
                
                if (successMsg) {
                    alertBox.textContent = '‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!';
                    alertBox.classList.add('show', 'alert-success');
                    alertBox.classList.remove('alert-error');
                    setTimeout(() => closeEditModal(), 1500);
                    location.reload();
                } else {
                    alertBox.textContent = '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—è';
                    alertBox.classList.add('show', 'alert-error');
                    alertBox.classList.remove('alert-success');
                }
            });
        });

        // –ó–ú–Ü–ù–ê –ü–ê–†–û–õ–Ø
        function openPasswordModal() {
            document.getElementById('passwordModal').classList.add('active');
        }

        function closePasswordModal() {
            document.getElementById('passwordModal').classList.remove('active');
            document.getElementById('passwordAlert').classList.remove('show');
            document.getElementById('passwordForm').reset();
        }

        document.getElementById('passwordForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(html => {
                const alertBox = document.getElementById('passwordAlert');
                const doc = new DOMParser().parseFromString(html, 'text/html');
                
                if (html.includes('–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ')) {
                    alertBox.textContent = '‚úÖ –ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ!';
                    alertBox.classList.add('show', 'alert-success');
                    alertBox.classList.remove('alert-error');
                    document.getElementById('passwordForm').reset();
                    setTimeout(() => closePasswordModal(), 1500);
                } else if (html.includes('–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π')) {
                    alertBox.textContent = '‚ùå –°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ–≤—ñ—Ä–Ω–∏–π!';
                    alertBox.classList.add('show', 'alert-error');
                    alertBox.classList.remove('alert-success');
                } else if (html.includes('–Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è')) {
                    alertBox.textContent = '‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è!';
                    alertBox.classList.add('show', 'alert-error');
                    alertBox.classList.remove('alert-success');
                } else if (html.includes('–º—ñ–Ω—ñ–º—É–º 6')) {
                    alertBox.textContent = '‚ùå –ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤!';
                    alertBox.classList.add('show', 'alert-error');
                    alertBox.classList.remove('alert-success');
                }
            });
        });

        // –í–ò–•–Ü–î
        function openLogoutModal() {
            document.getElementById('logoutModal').classList.add('active');
        }

        function closeLogoutModal() {
            document.getElementById('logoutModal').classList.remove('active');
        }

        function confirmLogout() {
            document.getElementById('logoutForm').submit();
        }

        // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–æ–∫ –ø—Ä–∏ –∫–ª–∏–∫—É –ø–æ–∑–∞ –Ω–∏–º–∏
        document.querySelectorAll('.modal-overlay').forEach(modal => {
            modal.addEventListener('click', function(e) {
                if (e.target === this) {
                    this.classList.remove('active');
                }
            });
        });

        // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–æ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫—É ESC
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                document.querySelectorAll('.modal-overlay.active').forEach(modal => {
                    modal.classList.remove('active');
                });
            }
        });
    </script>
</body>
</html>